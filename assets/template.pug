doctype html
html(xmlns='http://www.w3.org/1999/xhtml', xml:lang='en', lang='en')
  head
    meta(charset='utf-8')
    meta(name='generator', content='website-evidence-collector')
    meta(name='viewport', content='width=device-width, initial-scale=1.0, user-scalable=yes')
    title #{title} (#{uri_ins})
    style(type='text/css') !{inlineCSS}
    style(type='text/css').
      /* pandoc */
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
      
      /* github */
      .markdown-body > article {
        box-sizing: border-box;
        min-width: 200px;
        max-width: 980px;
        margin: 0 auto;
        padding: 45px;
      }
      
      .markdown-body table {
        width: inherit !important;
      }

      @media (max-width: 767px) {
        .markdown-body > article {
          padding: 15px;
        }
      }
      
      /* custom */
      .markdown-body {  
        counter-reset: h1counter; 
      }      
      
      h1:before {
        content: counter(h1counter) "\0000a0\0000a0";
        counter-increment: h1counter;
      }
      h1 {
        counter-reset: h2counter;
      }
      
      h2:before {
        content: counter(h1counter) "." counter(h2counter) "\0000a0\0000a0";
        counter-increment: h2counter;
      }
      h2 {
        counter-reset: h3counter;
      }
      
      h3:before {
        content: counter(h1counter) "." counter(h2counter) "." counter(h3counter) "\0000a0\0000a0";
        counter-increment: h3counter;
      }
      
      h1.nocount:before, h2.nocount:before, h3.nocount:before {
          content: none;
          counter-increment: none;
      }
      
      /* annex */
      h1[id^=app]:before {
        content: none;
      }
      h1[id^=app] {
        counter-reset: h2counter;
      }
      
      h2[id^=app]:before {
        content: counter(h2counter, upper-alpha) "\0000a0\0000a0";
      }
      
      #logo{
        width: 40%;
        float: right;
        background-color: var(--color-canvas-default);
      }
      
      .notrunc {
        white-space: nowrap;
      }
      
      .trunc {
        white-space: nowrap;
        text-overflow:ellipsis;
        overflow: hidden;
        max-width:1px;
      }
      
      .markdown-body table td.code {
        padding: 0px;
      }
      
      .markdown-body table td.code pre {
        margin: 0px;
      }
      
      td.highlighted, td.highlighted pre, li.highlighted a {
        background-color: red;
        color: white;
      }
      
      @media print {
        .markdown-body h1,h2,h3,h4,h5,h6 {
          break-after: avoid-page;
        }
        
        .screen-only {
          display: none;
        }
      }

  body.markdown-body: article
    header#title-block-header
      div#logo
        include /wec_logo.svg
      h1.title= title
      h2.subtitle: a(href=uri_ins)= uri_ins

    h1(id="sec:evidence-collection-organisation") Evidence Collection Organisation
    
    table
      colgroup
        col(style='width: 50%')
        col(style='width: 50%')
      tbody
        tr
          td Target Web Service
          td: code= uri_ins
        tr
          td Automated Evidence Collection Start Time
          td= new Date(start_time).toLocaleString()
        tr
          td Automated Evidence Collection End Time
          td= new Date(end_time).toLocaleString()
        tr
          td Software Version
          td= script.version.commit || script.version.npm
        tr
          td Software Host
          td= script['host']

    h1(id="sec:automated-evidence-collection") Automated Evidence Collection
    
    p The automated evidence collection is carried out using the tool #[a(href="https://edps.europa.eu/press-publications/edps-inspection-software_en") website evidence collector] (also #[a(href="https://github.com/EU-EDPS/website-evidence-collector") on Github]) in version #{script.version.commit || script.version.npm} on the platform #{browser.platform.name} in version #{browser.platform.version}. The tool employs the browser #{browser.name} in version #{browser.version} for browsing the website.
    
    p During the browsing, the tool gathers evidence and runs a number of checks. It takes screenshots from the browser to identify potential cookie banners. It tests the use of HTTPS/SSL to check whether the website enforces a HTTPS connection. Then, the evidence collection tool scans the first web page for links to common social media and collaboration platforms for statistics on the overall use of potentially privacy-intrusive third-party web services.

    p The analysis of the recorded traffic between the browser and both the target web service as well as involved third-party web services, and the browserâ€™s persistent storage follows in a #[span.citation(data-cites="sec:traffic-and-persistent-data-analysis"): a(href="#traffic-and-persistent-data-analysis") subsequent section].
    
    h2(id="sec:webpage-visit") Webpage Visit

    p
      | On #{new Date(start_time).toLocaleString()}, the evidence collection tool navigated the browser to #[a(href=uri_ins)= uri_ins]. The final location after potential redirects was #[a(href=uri_dest)= uri_dest].
      if script.config.screenshots
        |
        | The evidence collection tool took two screenshots #[span.citation(data-cites="fig:screenshot-top") to cover the top of the webpage] and #[span.citation(data-cites="fig:screenshot-bottom") the bottom].

    if script.config.screenshots
      figure
        img(src=`${jsondir}/screenshot-top.png` alt="Webpage Top Screenshot" id="fig:screenshot-top" style="width:100.0%")
        figcaption Webpage Top Screenshot

      figure
        img(src=`${jsondir}/screenshot-bottom.png` alt="Webpage Bottom Screenshot" id="fig:screenshot-bottom" style="width:100.0%")
        figcaption Webpage Bottom Screenshot

    h2(id="sec:use-of-httpsssl") Use of HTTPS/SSL

    p The evidence collection tool assessed the redirecting behaviour of #{host} with respect to the use of HTTPS.
    
    table.use-of-httpsssl
      colgroup
        col(style='width: 50%')
        col(style='width: 50%')
      tbody
        tr
          td allows connection with HTTPS
          td= secure_connection.https_support
        tr
          td HTTP redirect to HTTPS
          td= secure_connection.https_redirect
        if secure_connection.redirects
          tr
            td HTTP redirect location
            td: ul
              each redirect in secure_connection.redirects
                li
                  a(href=redirect)= redirect
        if secure_connection.http_error
          tr
            td Error when connecting with HTTP
            td= secure_connection.http_error
        if secure_connection.https_error
          tr
            td Error when connecting with HTTPS
            td= secure_connection.https_error
                
    if testSSL && testSSL.scanResult[0]
      - var results = testSSL.scanResult[0]

      -
        sortSeverity = function(a,b) {
          var severityToNumber = {
            CRITCAL: 0,
            HIGH: 1,
            MEDIUM: 2,
            LOW: 3,
            OK: 4,
            INFO: 5,
          };
          
          return severityToNumber[a.severity]-severityToNumber[b.severity];
        }
        
      p The software TestSSL from #[a(href="https://testssl.sh") https://testssl.sh] inspected the HTTPS configuration of the web service host #{results.targetHost}. It classifies detected vulnerabilities by their level of severity #[em low], #[em medium], #[em high], or #[em critical]. The severity ratings are automatically computed by the TestSSL software without consideration of the specifics of the individual website. They do not reflect the opinions or views of the website evidence collector authors. Details on the findings are listed in #[span.citation(data-cites="app:testssl"): a(href="#app:testssl") the Annex].
      
      table.testssl-summary
        thead
          tr
            th HTTPS/SSL Vulnerabilities per Severity
            th.notrunc Freq.
        tbody
          - var vulnerabilitiesBySeverity = groupBy(results.vulnerabilities,'severity');
          tr
            td Critical
            td.notrunc= vulnerabilitiesBySeverity['CRITCAL'] ? vulnerabilitiesBySeverity['CRITCAL'].length : 0
          tr
            td High
            td.notrunc= vulnerabilitiesBySeverity['HIGH'] ? vulnerabilitiesBySeverity['HIGH'].length : 0
          tr
            td Medium
            td.notrunc= vulnerabilitiesBySeverity['MEDIUM'] ? vulnerabilitiesBySeverity['MEDIUM'].length : 0
          tr
            td Low
            td.notrunc= vulnerabilitiesBySeverity['LOW'] ? vulnerabilitiesBySeverity['LOW'].length : 0


    h2(id="sec:use-of-csp") Use of Content Security Policies (CSPs)

    p Upon browser request of a web page, websites can indicate in the #[a(href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP") Content Security Policy] (CSP) meta data sent along with the requested web page a whitelist of mechanisms, domains and subdomains that browsers must respect when embedding components, such as styles, fonts, beacons, videos, maps, etc.

    if hosts.contentSecurityPolicy.firstParty.length > 0
      ol
        each host in hosts.contentSecurityPolicy.firstParty
          // check if host looks like a host (instead of e.g blob: data: etc.)
          if host.match(/[^\.]+\.[^\.]+/)
            li: a(href=`http://${host}`)= host
          else
            li= host

      p The website has whitelisted #{hosts.contentSecurityPolicy.firstParty.length} first-party domains and mechanisms.
    else
      p No CSP meta data was found. Consequently, no restrictions apply.

    h2(id="sec:use-of-social-media") Use of Social Media and Collaboration Platforms
    
    if links.social.length > 0    
      table.use-of-social-media-and-collaboration-platforms(style="width: 100%")
        colgroup
          col(style='width: 100%')
          col(style='width: 100%')
        thead
          tr
            th Link URL
            th Link Caption
        tbody
          each social in links.social
            tr
              td.trunc: a(href=social.href)= social.href
              td.notrunc= social.inner_text
    else
      p No corresponding links were found.
    
    p Common social media and collaboration platforms linked from #[a(href=uri_dest)= uri_dest] have been considered.
    
    h2(id="traffic-and-persistent-data-analysis") Traffic and Persistent Data Analysis

    p The evidence collection tool simulates a browsing session of the web service to analyse hereafter the recorded traffic between the browser and the Internet as well as the persistent data stored in the browser. First, the browser visited #[a(href=uri_dest)= uri_dest]. The evidence collection took #{browsing_history.length > 1 ? browsing_history.length - 1 : "no"} other web page(s) into account. Generally, predefined pages and a random subset of all first-party link targets (URLs) from the initial web page #[a(href=uri_dest)= uri_dest] are considered. The exhaustive list of browsed web pages is given in #[span.citation(data-cites="app:history"): a(href="#app:history") the Annex].

    p The web page(s) were browsed consecutively between #{new Date(start_time).toLocaleString()} and #{new Date(end_time).toLocaleString()}.
    
    p During the browsing, the HTTP Header #[a(href="https://en.wikipedia.org/wiki/Do_Not_Track") Do Not Track] was #{browser.extra_headers.dnt ? 'set' : 'not set'}.
        
    p For the subsequent analysis, the following hosts (with their path) were defined as first-party:
    
    ol
      each uri in uri_refs
        li: a(href=uri)= uri.replace(/(^\w+:|^)\/\//, '')

    h3(id="sec:traffic-analysis") Traffic Analysis

    p In the case of a visit of a very simple web page with a given URL, the browser sends a #[em request] to the web server configured for the domain specified in the URL. The web server, also called #[em host], sends then a #[em response] in the form of e.g. an HTML file that the browser downloads and displays. Most web pages nowadays are more complex and require the browser to send further requests to the same host (#[em first-party]) or even different hosts (potentially #[em third-party]) to download e.g. images, videos and fonts and to embed e.g. maps, tweets and comments. Please find more information about hosts and the distinction between first-party and third-party in the glossary in #[span.citation(data-cites="sec:glossary"): a(href="#sec:glossary") the Annex].

    p The evidence collection tool extracted lists of distinct first-party, respectively third-party, hosts from the browser requests recorded as part of the traffic. Note that if a specific path is configured to be first-party, than requests to other paths may lead to the first-party host being also listed amongst the third-party hosts.

    p A number of techniques allow hosts to track the browsing behaviour. The first-party host may instruct the browser to send requests for the (sole) purpose of providing information embedded in the request (e.g. cookies) to a given first-party or third-party host. Often, those requests are then responded with an empty file or with an image of size 1x1 pixel. Such files requested for the purpose of tracking are commonly called #[em web beacons].

    p The evidence collection tool compares all requests to signature lists compiled to detect potential web beacons or otherwise problematic content. The positive matches with the lists #[a(href='https://easylist.to/#easyprivacy') EasyPrivacy] (#[code easyprivacy.txt]) and #[a(href='https://easylist.to/#fanboy-s-annoyance-list') Fanboy's Annoyance] (#[code fanboy-annoyance.txt]) from #[a(href="https://easylist.to") https://easylist.to] are presented in #[span.citation(data-cites="app:annex-beacons"): a(href="#app:annex-beacons") the Annex]. The list of #[em web beacon hosts] contains hosts of those requests that match the signature list EasyPrivacy. Note that the result may include false positives and may be incomplete due to inaccurate, outdated or incomplete signature lists.

    p Eventually, the evidence collection tool logged all identified web forms that potentially transmit web form data using an unencrypted connection.

    h4 First-Party Hosts
    
    ol
      each host in hosts.requests.firstParty
        li: a(href=`http://${host}`)= host

    p Requests have been made to #{hosts.requests.firstParty.length} distinct first-party hosts.
    
    h4 Third-Party Hosts
    
    ol
      each host in hosts.requests.thirdParty
        li: a(href=`http://${host}`)= host

    p Requests have been made to #{hosts.requests.thirdParty.length} distinct third-party hosts.

    h4 First-Party Web Beacon Hosts
    
    ol
      each host in hosts.beacons.firstParty
        li: a(href=`http://${host}`)= host

    if hosts.beacons.firstParty.length > 0
      p Potential first-party web beacons were sent to #{hosts.beacons.firstParty.length} distinct hosts. Corresponding HTTP requests for first- and third-parties are listed in #[span.citation(data-cites="app:annex-beacons"): a(href="#app:annex-beacons") the Annex].
    else
      p No first-party web beacons were found.

    h4 Third-Party Web Beacon Hosts
    
    ol
      each host in hosts.beacons.thirdParty
        li: a(href=`http://${host}`)= host
        
    if hosts.beacons.thirdParty.length > 0
      p Potential third-party web beacons were sent to #{hosts.beacons.thirdParty.length} distinct hosts. Corresponding HTTP requests for first- and third-parties are listed in #[span.citation(data-cites="app:annex-beacons"): a(href="#app:annex-beacons") the Annex].
    else
      p No third-party web beacons were found.

    if hosts.contentSecurityPolicy.firstParty.length > 0

      h4 Third-Party Content Security Policy Hosts

      p Upon browser request of a web page, websites can indicate in the #[a(href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP") Content Security Policy] (CSP) meta data sent along with the requested web page a whitelist of mechanisms, domains and subdomains that browsers must respect when embedding components, such as styles, fonts, beacons, videos, maps, etc.

      ol
        each host in hosts.contentSecurityPolicy.thirdParty
          li: a(href=`http://${host}`)= host

      if hosts.contentSecurityPolicy.thirdParty.length > 0
        p The website has whitelisted #{hosts.contentSecurityPolicy.thirdParty.length} distinct third-party hosts.
      else
        p No third-party content security policy hosts were whitelisted.

    h4(id="sec:unsecure-forms") Web Forms with non-encrypted Transmission
    
    if unsafeForms.length > 0
      table.unfase-webforms
        colgroup
          col
          col
        thead
          tr
            th #
            th Web Form ID
            th Recipient URL
            th HTTP Method
        tbody
          each form,index in unsafeForms
            tr
              td= index+1
              td= form.id
              td= form.action
              td= form.method

      p The evidence collection tool logged #{unsafeForms.length} web forms that submit data potentially with no SSL encryption to a different web page.
    else
      p No web forms submitting data without SSL encryption were detected.

    h3(id="sec:persistent-data-analysis") Persistent Data Analysis

    p The evidence collection tool analysed persistent cookies after the browsing session. Web pages can also use the persistent HTML5 #[em local storage]. #[span.citation(data-cites="sec:local-storage"): a(href="#sec:local-storage") The subsequent section] lists its content after the browsing.
    
    - var cookiesByStorage = groupBy(cookies, 'firstPartyStorage')
    
    each cookieList,index in {'First-Party': cookiesByStorage['true'] || [], 'Third-Party': cookiesByStorage['false'] || []}
      h4 Cookies linked to #{index} Hosts
    
      if cookieList.length > 0
        table.cookies(style="width: 100%;")
          colgroup
            col(width="0%")
            col(width="0%")
            col(width="0%")
            col(width="100%")
            col(width="0%")
          thead
            tr
              th.notrunc #
              th.notrunc Host
              th.notrunc Path
              th.trunc Name
              th.notrunc Expiry in days
          tbody
            each cookie,index in cookieList
              tr
                td.notrunc= index+1
                td.notrunc: a(href=`http://${cookie.domain}`)= cookie.domain
                td.notrunc: a(href=`http://${cookie.domain}${cookie.path}`)= cookie.path
                td.trunc= cookie.name
                td.notrunc
                  if cookie.session
                    em session
                  else
                    = cookie.expiresDays

        p In total, #{cookieList.length} #{index.toLowerCase()} cookies were found.
      else
        p No #{cookieList.length} #{index.toLowerCase()} cookies were found.

    h4(id="sec:local-storage") Local Storage
    
    if Object.keys(localStorage).length > 0
      table.local-storage(style="width: 100%;")
        colgroup
          col(width="0%")
          col(width="20%")
          col(width="40%")
          col(width="40%")
        thead
          tr
            th.notrunc #
            th.trunc Host
            th.trunc Key
            th.trunc Value
        tbody
          - let index = 1
          each storage,url in localStorage
            each data,key in storage
              tr
                td.notrunc= index++
                td.trunc: a(href=url title=url)= url.replace(/(^\w+:|^)\/\//, '')
                td.trunc= key
                td.trunc.code: pre: code= JSON.stringify(data.value, null, 2)
    else
      p The local storage was found to be empty.

    h1(id="app:annex") Annex
    
    h2(id="app:history") Browsing History
    
    p For the collection of evidence, the browser navigated consecutively to the following #{browsing_history.length} webpage(s):
    
    ol
      each link in browsing_history
        li: a(href=link)= link
            
    h2(id="app:annex-beacons") All Beacons
    
    p The data transmitted by beacons using HTTP GET parameters are decoded for improved readability and displayed beneath the beacon URL.
    
    each beaconsByList, listName in groupBy(beacons, 'listName')
      h5(id=`annex-beacons-${listName}`)= listName
    
      table.adblock-findings(style="width: 100%;")
        colgroup
          col(width="0%")
          col(width="100%")
          col(width="0%")
        thead
          tr
            th.notrunc #
            th.trunc Sample URL
            th.notrunc Freq.
        tbody
          each beacon,index in beacons
            tr
              td.notrunc= index+1
              td.trunc(title=beacon.url)= beacon.url
              td.notrunc= beacon.occurrances
            if beacon.query
              tr
                td.notrunc
                td.trunc.code(colspan=2): pre: code= JSON.stringify(beacon.query, null, 2).split("\n").slice(1,-1).join("\n").replace(/^  /mg , '')
    
    if testSSL
      - var results = testSSL.scanResult[0]
      
      h2(id="app:testssl") TestSSL Scan
      
      p The following data stems from a #[a(href="https://testssl.sh/") TestSSL] scan. The severity ratings are automatically computed by the TestSSL software without consideration of the specifics of the individual website. They do not reflect the opinions or views of the website evidence collector authors.
      
      p.screen-only #[a(href="testssl/testssl.html") Click here] to check wether the full TestSSL scan report is available.
      
      table(width="100%")
        colgroup
          col
          col
        tbody
          tr
            td TestSSL version
            td= testSSL.version
          tr
            td OpenSSL version
            td= testSSL.openssl
          tr
            td Target Host
            td #{results.targetHost} (#{results.ip})
        
      h3 Protocols
      
      table(width="100%")
        colgroup
          col(style='width: 0%')
          col(style='width: 100%') 
          col(style='width: 0%')
        thead
          tr
            th Protocol
            th Finding
            th Severity
        tbody
          each protocol in results.protocols.sort(sortSeverity)
            tr
              td.notrunc= protocol.id
              td= protocol.finding
              td.notrunc= protocol.severity
              
      h3 HTTPS/SSL Vulnerabilities

      table(width="100%")
        colgroup
          col(style='width: 0%')
          col(style='width: 80%') 
          col(style='width: 20%')
          col(style='width: 0%')
        thead
          tr
            th Vulnerability
            th Finding
            th CVE
            th Severity
        tbody
          each vulnerability in results.vulnerabilities.sort(sortSeverity)
            tr
              td.notrunc= vulnerability.id
              td.trunc(title=vulnerability.finding)= vulnerability.finding
              td.trunc(title=vulnerability.cve).trunc                  
                if vulnerability.cve
                  each cve in vulnerability.cve.split(' ')
                    a(href=`https://cve.mitre.org/cgi-bin/cvename.cgi?name=${cve}`)= cve
                    |
              td.notrunc= vulnerability.severity
              
      h3 Cipher Categories
      
      table(style='width: 100%')
        colgroup
          col(style='width: 0%')
          col(style='width: 100%') 
          col(style='width: 0%')
          col(style='width: 0%')
        thead
          tr
            th Name
            th Finding
            th CWE
            th Severity
        tbody
          each cipher in results.ciphers.sort(sortSeverity)
            tr
              td.notrunc= cipher.id
              td.notrunc= cipher.finding
              td.notrunc
                if cipher.cwe
                  a(href=`https://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=${cipher.cwe.replace('CWE-','')}`)= cipher.cwe
              td.notrunc= cipher.severity
      
      h3 HTTP Header Responses

      table(style='width: 100%')
        colgroup
          col(style='width: 0%')
          col(style='width: 100%') 
          col(style='width: 0%')
        thead
          tr
            th Name
            th Finding
            th Severity
        tbody
          each response in results.headerResponse.sort(sortSeverity)
            tr
              td.notrunc= response.id
              td.trunc(title=response.finding)= response.finding
              td.notrunc= response.severity
          
    h2(id='app:glossary') Glossary
    dl
      dt Filter Lists
      dd Browser extensions commonly referred by #[em Adblocker] have been developed to block the loading of advertisements based on filter lists. Later on, filter lists have been extended to block also the loading of web page elements connected to the tracking of web page visitors. For this evidence collection, publicly available tracking filter lists are re-purposed to identify web page elements that may track the web page visitors.
      dt Do Not Track (DNT for short, HTTP)
      dd The Do Not Track header is the proposed HTTP header field DNT that requests that a web service does not track its individual visitors. Note that this request cannot be enforced by technical means on the visitors&rsquo; side. It is upon the web service to take the DNT header field into account. For this evidence collection, the Do Not Track header is not employed.
      dt First-Party
      dd In this document, #[em first-party] is a classification of the resources links, web beacons, and cookies. To be first party, the resource domain must match the domain of the inspected web service or other configured first-party domains. Note that the resource path must also be within the path of the web service to be considered first-party.
      dt Host (HTTP)
      dd The HTTP #[em host] is the computer receiving and answering browser requests for web pages.
      dt Redirect (HTTP)
      dd A request for a web page may be answered with a new location (URL) to be requested instead. These HTTP #[em redirects] can be used to enforce the use of HTTPS. Visitors requested an HTTP web page are redirected to the corresponding HTTPS web page.
      dt Request (HTTP)
      dd To download and display a web page identified by an URL, browsers send HTTP #[em requests] with the URL to the host computer specified as part of the URL.
      dt Local Storage (HTML5)
      dd Modern web browsers allow web pages to store data locally in the browser profile. This #[em local storage] is web site-specific and persistent through browser shutdowns. As embedded third-party resources may also have access to the first-party local storage, it is classified both as first- and third-party.
      dt Third-Party
      dd Links, web beacons and cookies that are not #[em first-party] (see above) are classified as #[em third-party].
      dt Web Beacon
      dd A web beacon is one of various techniques used on web pages to unobtrusively (usually invisibly) allow tracking of web page visitors. A web beacon can be implemented for instance as a 1x1 pixel image, a transparent image, or an empty file that is requested together with other resources when a web page is loaded.
      dt Web Beacon Host
      dd The #[em host] in the URL of a #[em request] of a #[em Web Beacon] is called #[em Web Beacon host].

      
    script.
      // @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&dn=expat.txt Expat
      //
      // AnchorJS - v5.0.0 - 2023-01-18
      // https://www.bryanbraun.com/anchorjs/
      // Copyright (c) 2023 Bryan Braun; Licensed MIT
      //
      // @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&dn=expat.txt Expat
      !function(A,e){"use strict";"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():(A.AnchorJS=e(),A.anchors=new A.AnchorJS)}(globalThis,function(){"use strict";return function(A){function u(A){A.icon=Object.prototype.hasOwnProperty.call(A,"icon")?A.icon:"î§‹",A.visible=Object.prototype.hasOwnProperty.call(A,"visible")?A.visible:"hover",A.placement=Object.prototype.hasOwnProperty.call(A,"placement")?A.placement:"right",A.ariaLabel=Object.prototype.hasOwnProperty.call(A,"ariaLabel")?A.ariaLabel:"Anchor",A.class=Object.prototype.hasOwnProperty.call(A,"class")?A.class:"",A.base=Object.prototype.hasOwnProperty.call(A,"base")?A.base:"",A.truncate=Object.prototype.hasOwnProperty.call(A,"truncate")?Math.floor(A.truncate):64,A.titleText=Object.prototype.hasOwnProperty.call(A,"titleText")?A.titleText:""}function d(A){var e;if("string"==typeof A||A instanceof String)e=[].slice.call(document.querySelectorAll(A));else{if(!(Array.isArray(A)||A instanceof NodeList))throw new TypeError("The selector provided to AnchorJS was invalid.");e=[].slice.call(A)}return e}this.options=A||{},this.elements=[],u(this.options),this.add=function(A){var e,t,o,i,n,s,a,r,l,c,h,p=[];if(u(this.options),0!==(e=d(A=A||"h2, h3, h4, h5, h6")).length){for(null===document.head.querySelector("style.anchorjs")&&((A=document.createElement("style")).className="anchorjs",A.appendChild(document.createTextNode("")),void 0===(h=document.head.querySelector('[rel="stylesheet"],style'))?document.head.appendChild(A):document.head.insertBefore(A,h),
      A.sheet.insertRule(".anchorjs-link{opacity:0;text-decoration:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}",A.sheet.cssRules.length),A.sheet.insertRule(":hover>.anchorjs-link,.anchorjs-link:focus{opacity:1}",A.sheet.cssRules.length),A.sheet.insertRule("[data-anchorjs-icon]::after{content:attr(data-anchorjs-icon)}",A.sheet.cssRules.length),A.sheet.insertRule('@font-face{font-family:anchorjs-icons;src:url(data:n/a;base64,AAEAAAALAIAAAwAwT1MvMg8yG2cAAAE4AAAAYGNtYXDp3gC3AAABpAAAAExnYXNwAAAAEAAAA9wAAAAIZ2x5ZlQCcfwAAAH4AAABCGhlYWQHFvHyAAAAvAAAADZoaGVhBnACFwAAAPQAAAAkaG10eASAADEAAAGYAAAADGxvY2EACACEAAAB8AAAAAhtYXhwAAYAVwAAARgAAAAgbmFtZQGOH9cAAAMAAAAAunBvc3QAAwAAAAADvAAAACAAAQAAAAEAAHzE2p9fDzz1AAkEAAAAAADRecUWAAAAANQA6R8AAAAAAoACwAAAAAgAAgAAAAAAAAABAAADwP/AAAACgAAA/9MCrQABAAAAAAAAAAAAAAAAAAAAAwABAAAAAwBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAMCQAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAg//0DwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAAIAAAACgAAxAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADAAAAAIAAgAAgAAACDpy//9//8AAAAg6cv//f///+EWNwADAAEAAAAAAAAAAAAAAAAACACEAAEAAAAAAAAAAAAAAAAxAAACAAQARAKAAsAAKwBUAAABIiYnJjQ3NzY2MzIWFxYUBwcGIicmNDc3NjQnJiYjIgYHBwYUFxYUBwYGIwciJicmNDc3NjIXFhQHBwYUFxYWMzI2Nzc2NCcmNDc2MhcWFAcHBgYjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAAADACWAAEAAAAAAAEACAAAAAEAAAAAAAIAAwAIAAEAAAAAAAMACAAAAAEAAAAAAAQACAAAAAEAAAAAAAUAAQALAAEAAAAAAAYACAAAAAMAAQQJAAEAEAAMAAMAAQQJAAIABgAcAAMAAQQJAAMAEAAMAAMAAQQJAAQAEAAMAAMAAQQJAAUAAgAiAAMAAQQJAAYAEAAMYW5jaG9yanM0MDBAAGEAbgBjAGgAbwByAGoAcwA0ADAAMABAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAP) format("truetype")}',A.sheet.cssRules.length)),
      h=document.querySelectorAll("[id]"),t=[].map.call(h,function(A){return A.id}),i=0;i<e.length;i++)if(this.hasAnchorJSLink(e[i]))p.push(i);else{if(e[i].hasAttribute("id"))o=e[i].getAttribute("id");else if(e[i].hasAttribute("data-anchor-id"))o=e[i].getAttribute("data-anchor-id");else{for(r=a=this.urlify(e[i].textContent),s=0;n=t.indexOf(r=void 0!==n?a+"-"+s:r),s+=1,-1!==n;);n=void 0,t.push(r),e[i].setAttribute("id",r),o=r}(l=document.createElement("a")).className="anchorjs-link "+this.options.class,l.setAttribute("aria-label",this.options.ariaLabel),l.setAttribute("data-anchorjs-icon",this.options.icon),this.options.titleText&&(l.title=this.options.titleText),c=document.querySelector("base")?window.location.pathname+window.location.search:"",c=this.options.base||c,l.href=c+"#"+o,"always"===this.options.visible&&(l.style.opacity="1"),"î§‹"===this.options.icon&&(l.style.font="1em/1 anchorjs-icons","left"===this.options.placement)&&(l.style.lineHeight="inherit"),"left"===this.options.placement?(l.style.position="absolute",l.style.marginLeft="-1.25em",l.style.paddingRight=".25em",l.style.paddingLeft=".25em",e[i].insertBefore(l,e[i].firstChild)):(l.style.marginLeft=".1875em",l.style.paddingRight=".1875em",l.style.paddingLeft=".1875em",e[i].appendChild(l))}for(i=0;i<p.length;i++)e.splice(p[i]-i,1);this.elements=this.elements.concat(e)}return this},this.remove=function(A){for(var e,t,o=d(A),i=0;i<o.length;i++)(t=o[i].querySelector(".anchorjs-link"))&&(-1!==(e=this.elements.indexOf(o[i]))&&this.elements.splice(e,1),o[i].removeChild(t));return this},
      this.removeAll=function(){this.remove(this.elements)},this.urlify=function(A){var e=document.createElement("textarea");return e.innerHTML=A,A=e.value,this.options.truncate||u(this.options),A.trim().replace(/'/gi,"").replace(/[& +$,:;=?@"#\u007B\u007D|^~[`%!'<>\]./()*\\\n\t\b\v\u00A0]/g,"-").replace(/-{2,}/g,"-").substring(0,this.options.truncate).replace(/^-+|-+$/gm,"").toLowerCase()},this.hasAnchorJSLink=function(A){var e=A.firstChild&&-1<(" "+A.firstChild.className+" ").indexOf(" anchorjs-link "),A=A.lastChild&&-1<(" "+A.lastChild.className+" ").indexOf(" anchorjs-link ");return e||A||!1}}});
      // @license-end

      // Enable links for selected headers
      var anchors = new AnchorJS();
      anchors.options = {
        placement: 'right',
        /* visible: 'always', */
        /* icon: 'Â¶', */
      };
      anchors.add(":not(header) > h1, :not(header) > h2, h3, h4, h5, h6")

    script.
      function highlighter(item) { 
         item.addEventListener('dblclick', function() {
             item.classList.toggle('highlighted');
         }, false);    
      }
      // highlighting for table cells
      [].forEach.call(document.getElementsByTagName('td'), highlighter);
      // highlighting for list items
      [].forEach.call(document.getElementsByTagName('li'), highlighter);
  
